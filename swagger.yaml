openapi: 3.0.0
info:
  title: Event Management API
  version: 1.0.0
  description: API documentation for the Event Management System
servers:
  - url: http://localhost:3000/api
paths:
  /events:
    post:
      summary: Create a new event
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the event
                  example: Annual Meeting
                description:
                  type: string
                  description: The event description
                  example: Discussing the annual results.
                date:
                  type: string
                  format: date-time
                  description: The date of the event (YYYY-MM-DD)
                  example: '2024-12-01'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid data
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    get:
      summary: Retrieve all events
      tags:
        - Events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /events/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the event
        schema:
          type: integer
    get:
      summary: Retrieve a specific event by ID
      tags:
        - Events
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Event not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    put:
      summary: Update an event by ID
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the event
                  example: Updated Meeting
                description:
                  type: string
                  description: The event description
                  example: Discussing the updated results.
                date:
                  type: string
                  format: date-time
                  description: The date of the event (YYYY-MM-DD)
                  example: '2024-12-05'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Event not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    delete:
      summary: Delete an event by ID
      tags:
        - Events
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Event not found
  /events/{id}/tasks:
    get:
      summary: Retrieve all tasks for a specific event
      tags:
        - Events
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the event
          schema:
            type: integer
      responses:
        '200':
          description: A list of tasks for the event
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier for the task
                    eventId:
                      type: integer
                      description: The ID of the associated event
                    name:
                      type: string
                      description: The name of the task
                    description:
                      type: string
                      description: A description of the task
                    dueDate:
                      type: string
                      format: date-time
                      description: The due date of the task
                    status:
                      type: string
                      description: The status of the task
                    createdAt:
                      type: string
                      format: date-time
                      description: The creation timestamp
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Event not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /tasks:
    post:
      summary: Create a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: integer
                  description: The ID of the associated event
                  example: 1
                name:
                  type: string
                  description: The name of the task
                  example: Prepare presentation
                description:
                  type: string
                  description: A description of the task
                  example: Create slides for the meeting.
                dueDate:
                  type: string
                  format: date-time
                  description: The due date of the task (YYYY-MM-DD)
                  example: '2024-12-01'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid data
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    get:
      summary: Retrieve all tasks
      tags:
        - Tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the task
        schema:
          type: integer
    get:
      summary: Retrieve a specific task by ID
      tags:
        - Tasks
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    put:
      summary: Update a task by ID
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the task
                  example: Update presentation
                description:
                  type: string
                  description: A description of the task
                  example: Update slides based on feedback.
                dueDate:
                  type: string
                  format: date-time
                  description: The due date of the task (YYYY-MM-DD)
                  example: '2024-12-05'
                status:
                  type: string
                  description: The status of the task
                  example: in-progress
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
    delete:
      summary: Delete a task by ID
      tags:
        - Tasks
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /tasks/{id}/updates:
    get:
      summary: Retrieve all updates for a specific task
      tags:
        - Tasks
      responses:
        '200':
          description: A list of updates for the task
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    taskId:
                      type: integer
                    content:
                      type: string
                      description: The content of the update
                    createdAt:
                      type: string
                      format: date-time
                      description: The creation timestamp of the update
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /task-updates:
    post:
      summary: Create a new task update
      tags:
        - Task Updates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  type: integer
                  description: ID of the associated task
                  example: 1
                updateText:
                  type: string
                  description: The update text
                  example: Task has been started.
      responses:
        '201':
          description: Task update created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid data
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    get:
      summary: Retrieve all task updates
      tags:
        - Task Updates
      responses:
        '200':
          description: A list of task updates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskUpdate'
  /task-updates/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the task update
        schema:
          type: integer
    get:
      summary: Retrieve a specific task update by ID
      tags:
        - Task Updates
      responses:
        '200':
          description: Task update details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
        '404':
          description: Task update not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task Update not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    put:
      summary: Update a task update by ID
      tags:
        - Task Updates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updateText:
                  type: string
                  example: Updated task progress.
      responses:
        '200':
          description: Task update updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
        '404':
          description: Task update not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task Update not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      summary: Delete a task update by ID
      tags:
        - Task Updates
      responses:
        '204':
          description: Task update deleted successfully
        '404':
          description: Task update not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task Update not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the event
        name:
          type: string
          description: The name of the event
        description:
          type: string
          description: A description of the event
        date:
          type: string
          format: date-time
          description: The date and time of the event
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
    Task:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the task
        eventId:
          type: integer
          description: The ID of the associated event
        name:
          type: string
          description: The name of the task
        description:
          type: string
          description: A description of the task
        dueDate:
          type: string
          format: date-time
          description: The due date of the task
        status:
          type: string
          description: The status of the task
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
    TaskUpdate:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the task update
        taskId:
          type: integer
          description: The ID of the associated task
        updateText:
          type: string
          description: The text of the update
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
tags:
  - name: Events
    description: API endpoints for managing events
  - name: Tasks
    description: API endpoints for managing tasks
  - name: Task Updates
    description: API endpoints for managing task updates
